// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['underscore', 'backbone'], function(_, Backbone) {
    var BaseModel, Todo, User;
    BaseModel = (function(_super) {

      __extends(BaseModel, _super);

      function BaseModel() {
        return BaseModel.__super__.constructor.apply(this, arguments);
      }

      return BaseModel;

    })(Backbone.Model);
    User = (function(_super) {

      __extends(User, _super);

      function User() {
        return User.__super__.constructor.apply(this, arguments);
      }

      User.prototype.urlRoot = '/api/users';

      User.prototype.defaults = {
        name: '',
        tasksUrl: ''
      };

      User.prototype.updateName = function(newName) {
        return this.set({
          name: newName
        });
      };

      return User;

    })(BaseModel);
    Todo = (function(_super) {

      __extends(Todo, _super);

      function Todo() {
        return Todo.__super__.constructor.apply(this, arguments);
      }

      Todo.prototype.urlRoot = function() {
        return "/api/users/" + (this.get('userId')) + "/tasks/" + (this.get('id'));
      };

      Todo.prototype.defaults = {
        description: '',
        completed: false,
        userId: ''
      };

      Todo.prototype.initialize = function(options) {
        if (options != null ? options.urlRoot : void 0) {
          this.urlRoot = function() {
            return options.urlRoot;
          };
        }
        if (options != null ? options.userId : void 0) {
          this.set('userId', options.userId);
        }
        return Todo.__super__.initialize.call(this);
      };

      Todo.prototype.updateDescription = function(newDescription) {
        this.set('description', newDescription);
      };

      Todo.prototype.toggle = function() {
        this.save('completed', !this.get('completed'));
      };

      return Todo;

    })(BaseModel);
    return {
      User: User,
      Todo: Todo
    };
  });

}).call(this);
